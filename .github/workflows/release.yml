name: Generate release

on:
  push:
    tags:
      - 'v*'

jobs:
  release:

    runs-on: ubuntu-latest
    steps:
    # Setup environment
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.9
    - name: Upgrade python build software
      run: |
        python -m pip install --upgrade pip setuptools wheel
    - uses: actions/checkout@v2
    
    # Build Python packages
    - name: Build Python source package
      id: build_source_package
      run: |
        python setup.py sdist
        python setup.py bdist_wheel
    
    # Build documentation
    - name: Install doc dependencies
      run: |
        python setup.py develop
        python -m pip install -r requirements-docs.txt
        sudo apt-get update -y
        sudo apt-get install -y \
          inkscape \
          latexmk \
          texlive-latex-recommended \
          texlive-latex-extra \
          texlive-fonts-recommended
    - name: Build HTML and PDF documentation
      id: build_docs
      run: |
        make -C docs/ html latexpdf
        echo ::set-output name=pdf::$(echo docs/build/latex/smpte*.pdf)
        # Also put a copy of the docs and TOC in the HTML build to make it
        # available via GitHub Pages
        cp docs/build/latex/smpte*.pdf docs/build/html/${{ github.event.repository.name }}_manual.pdf
        cp docs/build/latex/smpte*.aux docs/build/html/${{ github.event.repository.name }}_manual.aux
    
    # Publish built Python packages to PyPI
    # TODO
    ##- name: Publish Python packages to PyPI
    ##  uses: pypa/gh-action-pypi-publish@27b31702a0e7fc50959f5ad993c78deac1bdfc29
    ##  with:
    ##    password: ${{ secrets.PYPI_API_TOKEN }}
    
    # Publish docs to GitHub Pages
    - name: Publish HTML and PDF docs to GH Pages
      uses: peaceiris/actions-gh-pages@bbdfb200618d235585ad98e965f4aafc39b4c501
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: docs/build/html/
    
    # Publish release notice (and docs) on GitHub
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: ${{ github.ref }}
        draft: false
        prerelease: false
    - name: Upload PDF docs
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ${{ steps.build_docs.outputs.pdf }}
        asset_name: manual.pdf
        asset_content_type: application/pdf
